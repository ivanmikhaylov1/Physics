name: Generate and publish plot
permissions:
  contents: write

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SCRIPT: main.py
      IMAGE: trajectory.png
      BRANCH_PREFIX: generated-plot-
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: true

    - name: restore-pip-cache
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: pip-cache-${{ runner.os }}-{{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          pip-cache-${{ runner.os }}-

    - name: install-deps
      run: |
        python3 -V
        python3 -m pip install --upgrade pip
        if [ -f requirements.txt ]; then
          python3 -m pip install -r requirements.txt
        else
          python3 -m pip install numpy scipy matplotlib
        fi

    - name: run script and capture output
      id: run-script
      run: |
        set +e
        cat > .run_with_backend.py <<'PY'
        import matplotlib
        matplotlib.use('Agg')
        import runpy, sys, traceback
        try:
            runpy.run_path('main.py', run_name='__main__')
        except Exception:
            traceback.print_exc()
            sys.exit(1)
        PY
        python3 .run_with_backend.py > run_output.txt 2>&1
        RC=$?
        OUTPUT=$(cat run_output.txt)
        echo "$OUTPUT"
        echo "OUTPUT<<EOF" >> $GITHUB_ENV
        printf '%s\n' "$OUTPUT" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        echo "exit_code=$RC" >> $GITHUB_OUTPUT



    - name: verify image
      id: verify-image
      run: |
        if [ -f "${{ env.IMAGE }}" ]; then
          echo "found=true" >> $GITHUB_OUTPUT
        else
          echo "found=false" >> $GITHUB_OUTPUT
        fi

    - name: create branch and push image
      if: steps.verify-image.outputs.found == 'true'
      run: |
        BRANCH_NAME="${{ env.BRANCH_PREFIX }}${{ github.run_id }}"
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git switch -c "$BRANCH_NAME"
        git add "${{ env.IMAGE }}"
        git commit -m "Add generated ${{ env.IMAGE }} from workflow #${{ github.run_id }}" || true
        git push origin "$BRANCH_NAME"
        git fetch origin --prune
        for remote_ref in $(git ls-remote --heads origin | awk '{print $2}' | sed 's#refs/heads/##'); do
          case "$remote_ref" in
            $BRANCH_NAME) continue ;;
            main) continue ;;
            ${{ env.BRANCH_PREFIX }}*) 
              if [ "$remote_ref" != "$BRANCH_NAME" ]; then
                git push origin --delete "$remote_ref" || true
              fi
              ;;
            *) continue ;;
          esac
        done

    - name: add results and image to summary
      run: |
        {
          echo "## Результаты запуска"
          echo ""
          echo '```'
          printf '%s\n' "$OUTPUT"
          echo '```'
          echo ""
          if [ -f "${{ env.IMAGE }}" ]; then
            BRANCH_NAME="${{ env.BRANCH_PREFIX }}${{ github.run_id }}"
            RAW_URL="https://raw.githubusercontent.com/${{ github.repository }}/$BRANCH_NAME/${{ env.IMAGE }}"
            echo "![График]($RAW_URL)"
            echo ""
            echo "Raw URL: $RAW_URL"
          else
            echo "_График не был создан из-за ошибки._"
          fi
        } >> $GITHUB_STEP_SUMMARY

    - name: upload artifact
      if: steps.verify-image.outputs.found == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: trajectory-plot
        path: trajectory.png
