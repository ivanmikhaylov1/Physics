name: Generate and publish plot
permissions:
  contents: write

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SCRIPT: M1/M1.py
      IMAGE: trajectory.png
      BRANCH_PREFIX: generated-plot-
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: true
    - name: restore-pip-cache
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: pip-cache-${{ runner.os }}-{{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          pip-cache-${{ runner.os }}-
    - name: install-deps
      run: |
        python3 -V
        python3 -m pip install --upgrade pip
        if [ -f requirements.txt ]; then
          python3 -m pip install -r requirements.txt
        else
          python3 -m pip install numpy scipy matplotlib
        fi
    - name: run script with Agg backend
      run: |
        python3 - <<'PY'
        import matplotlib
        matplotlib.use('Agg')
        import runpy, sys, traceback, os
        try:
            runpy.run_path('${{ env.SCRIPT }}', run_name='__main__')
        except Exception:
            traceback.print_exc()
            sys.exit(1)
        finally:
            os.system('ls -la')
        PY
    - name: verify output
      run: |
        ls -la
        if [ -f "${{ env.IMAGE }}" ]; then
          echo "${{ env.IMAGE }} found"
        else
          echo "${{ env.IMAGE }} NOT found"
          exit 1
        fi
    - name: create branch push image and prune only auto branches
      run: |
        BRANCH_NAME="${{ env.BRANCH_PREFIX }}${{ github.run_id }}"
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git switch -c "$BRANCH_NAME"
        git add "${{ env.IMAGE }}"
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Add generated ${{ env.IMAGE }} from workflow #${{ github.run_id }}"
          git push origin "$BRANCH_NAME"
        fi
        git fetch origin --prune
        for remote_ref in $(git ls-remote --heads origin | awk '{print $2}' | sed 's#refs/heads/##'); do
          case "$remote_ref" in
            $BRANCH_NAME) continue ;;
            main) continue ;;
            ${{ env.BRANCH_PREFIX }}*) 
              git push origin --delete "$remote_ref" || true
              ;;
            *) continue ;;
          esac
        done
    - name: add image to Actions summary
      run: |
        BRANCH_NAME="${{ env.BRANCH_PREFIX }}${{ github.run_id }}"
        RAW_URL="https://github.com/${{ github.repository }}/blob/${{ env.BRANCH_PREFIX }}${{ github.run_id }}/${{ env.IMAGE }}?raw=true"
        echo "![График]($RAW_URL)" >> $GITHUB_STEP_SUMMARY
        echo "Raw URL: $RAW_URL"
    - name: upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: trajectory-plot
        path: trajectory.png
